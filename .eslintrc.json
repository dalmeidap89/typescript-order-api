{
  "env": {
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "airbnb-base",
    "prettier",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "tsconfigRootDir": "./",
    "sourceType": "module" // Allows for the use of imports
  },
  "plugins": ["@typescript-eslint", "prettier"],
  "rules": {
    "prettier/prettier": "error",
    "@typescript-eslint/no-use-before-define": "off", // Allows us to hoist variables and functions which I am a fan of, functions not variables that is.
    "@typescript-eslint/no-explicit-any": "off", // Too strict for my case, sometimes I need an any type
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        // Prevents us from using any delimiter for interface properties.
        "multiline": {
          "delimiter": "none",
          "requireLast": false
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      0,
      {
        "allowExpressions": false
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "import/named": "off",
    "import/export": "off",
    "import/prefer-default-export": "off", // Allow single Named-export
    "node/no-unsupported-features/es-syntax": "off", // Allows us to use Import and Export keywords.
    "space-before-function-paren": 0,
    "new-cap": 0,
    "semi": ["error", "never"],
    "camelcase": "error",
    "comma-dangle": "off",
    "indent": ["error", 2],
    "prefer-const": [
      "error",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "class-methods-use-this": 0,
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "no-underscore-dangle": ["error", { "allow": ["_id"] }] /* Necesario para Mongoose */
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
